- name: Upgrade control plane
  hosts: control_plane
  remote_user: root

  strategy: linear # Required for ansible.builtin.pause
  serial: 1

  tasks:
    - name: Upgrade system
      register: upgraded
      community.general.pacman:
        upgrade: true
        update_cache: true
    - name: Print upgraded packages
      when: |
        'packages' in upgraded
      ansible.builtin.debug:
        var: upgraded.packages
    - name: Reboot node
      register: reboot
      when: |
        ('packages' in upgraded) and (upgraded.packages | intersect(['kubelet', 'cri-o', 'linux', 'linux-lts']) | length > 0)
      ansible.builtin.reboot:

    - name: Ensure control plane is up
      ansible.builtin.shell:
        cmd: kubectl get nodes
      register: getnodes
      until: getnodes is not failed
      retries: 6
      delay: 10
    - name: Wait for cluster to settle after CP reboot
      when: reboot is not skipped
      ansible.builtin.wait_for:
        timeout: 60

    - name: Extract kubeadm version
      register: kubeadm_version
      ansible.builtin.shell:
        cmd: |-
          pacman -Qi kubeadm | grep Version | cut -d':' -f 2 | cut -d- -f 1
    - ansible.builtin.set_fact:
        new_version: "{{ kubeadm_version.stdout_lines[0] | trim }}"
      when: |
        new_version is not defined

    - name: Upload kubelet config to the cluster
      ansible.builtin.shell:
        cmd: kubeadm --config /etc/kubernetes/kubeadm.yaml init phase upload-config all
    - name: Plan upgrade
      register: plan
      ansible.builtin.shell:
        cmd: kubeadm upgrade plan "{{ new_version }}" -o json
    - meta: end_host
      when: plan.stdout_lines | length <= 1
    - name: Confirm upgrade
      ansible.builtin.pause:
        prompt: Confirm upgrade to {{ new_version }}
    - name: Apply upgrade
      register: apply
      ansible.builtin.shell:
        cmd: |
          kubeadm upgrade apply -y "{{ new_version }}"
    - name: Echo apply log
      ansible.builtin.debug:
        var: apply.stdout_lines

- name: Kubeadm upgrade nodes
  hosts: control_plane:workers
  remote_user: root
  tasks:
    - name: Upgrade node
      ansible.builtin.shell:
        cmd: kubeadm upgrade node
